public boolean isValidOn5by5(int row, int col){
  if(row < 5 && row >= 0 && col < 5 && col >= 0){
  return true;
  }
  return false;
}


public int countNeighborTrues(int row, int col){
   boolean[][] grid  ={{true,false,false,true,false},
                      {false,false,false,false,true},
                      {false,true, true,false, false},
                      {false,false,false,false,false},
                      {true,false,false,true,false}};
int count = 0;
if (isValidOn5by5(row - 1, col - 1) && grid [row - 1][col - 1]){
  count ++;
}
if (isValidOn5by5(row - 1, col) && grid [row - 1][col]){
  count ++;
}
if (isValidOn5by5(row - 1, col + 1) && grid [row - 1][col + 1]){
  count ++;
}
if (isValidOn5by5(row, col + 1) && grid [row][col + 1]){
  count ++;
}
if (isValidOn5by5(row, col - 1) && grid [row][col - 1]){
  count ++;
}
if (isValidOn5by5(row + 1, col - 1) && grid [row + 1][col - 1]){
  count ++;
}
if (isValidOn5by5(row + 1, col + 1) && grid [row + 1][col + 1]){
  count ++;
}
if (isValidOn5by5(row + 1, col) && grid [row + 1][col]){
  count ++;
}
return count;
}
public boolean isValidOn5by5(int row, int col){
  if(row < 5 && row >= 0 && col < 5 && col >= 0){
  return true;
  }
  return false;
}
